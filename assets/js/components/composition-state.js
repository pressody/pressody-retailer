import { components, html, i18n } from '../utils/index.js'
import CompositionSolutions from './composition-solutions.js'
import CompositionParts from './composition-parts.js'
import CompositionComposerJson from './composition-composerjson.js'

const {Placeholder} = components
const {__} = i18n

function CompositionPlaceholder (props) {
	return html`
	  <${Placeholder}
			  label=${__('No composition details', 'pressody_retailer')}
			  instructions=${__('Probably you need to do some configuring first. Go on.. don\'t be shy..', 'pressody_retailer')}
	  >
	  </${Placeholder}>
	`
}

function CompositionState (props) {
	// If we have no solutions, all is lost :(
	if (!props.solutions.length) {
		return html`
		<${CompositionPlaceholder}/>
		`
	}

	return html`
			<h3 key="composition-solutions-heading" className="pressody_retailer-composition-state-heading">${__('Final PD Solutions Included', 'pressody_retailer')}</h3>
			<p key="composition-solutions-desc">${__('After applying all the solutions logic (required solutions, excluded solutions, active purchased solutions, etc.), these is the flat list of PD Solutions making up this composition, at this moment.', 'pressody_retailer')}</p>
			<${CompositionSolutions} key="composition-solutions" solutions=${props.solutions}/>
		  <h3 key="composition-parts-heading" className="pressody_retailer-composition-state-heading">${__('Final PD Records Parts Used', 'pressody_retailer')}</h3>
		  <p key="composition-parts-desc">${__('This is the PD Records Parts list generated by the final solutions above. These are the actual parts that will be fed into PD Records to generate a composer.json for use.', 'pressody_retailer')}</p>
		  <p key="composition-parts-desc2">${__('Each part has it\'s final package name and the version constraints used by Composer to determine the version to install. For easier reference, each part shows the PD solutions that required it, each with it\'s version constraint.', 'pressody_retailer')}</p>
		  <${CompositionParts} key="composition-parts" parts=${props.parts}/>
		  <h3 key="composition-composerjson-heading" className="pressody_retailer-composition-state-heading">${__('Final Composer.json Contents', 'pressody_retailer')}</h3>
		  <p key="composition-composerjson-desc">${__('This is the actual composer.json generated by PD Records when fed the composition details (user details, parts, etc.)', 'pressody_retailer')}</p>
		  <${CompositionComposerJson} key="composition-composerjson" composerJson=${props.composerJson}/>
	`
}

export default CompositionState
